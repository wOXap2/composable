on:
  pull_request:
    branches:
      - main

env:
  ENVIRONMENT: test

jobs:
  terraform:
    name: Terraform Plan
    runs-on: ubuntu-latest
    environment: test

    defaults:
      run:
        shell: bash
        working-directory: ./iac

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup TF version
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.6

      - name: Terraforv Init
        id: init
        run: terraform init
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Terraform FMT
        id: fmt
        run: terraform fmt -check

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -var-file=$ENVIRONMENT.tfvars
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

      - uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: "${{ steps.plan.outputs.stdout }}"
        with:
          script: |
            const output = `#### Terraform Format and Style üñå \`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome  }}\`

            <details><summary>Show Plan</summary>

            \`\`\`

            ${process.env.PLAN}

            \`\`\`

            <details>

            *Pushed by: @${{ github.actor  }}, Action: \`${{ github.event_name  }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
